<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:/org/springframework/beans/factory/xml/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/tx classpath:/org/springframework/transaction/config/spring-tx-4.0.xsd
						http://www.springframework.org/schema/aop classpath:/org/springframework/aop/config/spring-aop-4.0.xsd
						http://www.springframework.org/schema/context classpath:/org/springframework/context/config/spring-context-4.0.xsd
						http://www.springframework.org/schema/rabbit classpath:/org/springframework/amqp/rabbit/config/spring-rabbit-1.6.xsd">



    <!-- ========== ConnectionFactory ==============================================================  -->

    <!--配置connection-factory，指定连接rabbit server参数 -->
    <bean id="rabbitConnectionFactory"
          class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
        <property name="host" value="10.5.52.57"></property>
        <property name="port" value="5672"></property>
        <property name="username" value="guest"/>
        <property name="password" value="guest"/>
        <property name="publisherConfirms" value="true"/>
        <property name="publisherReturns" value="true"/>
    </bean>


    <!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
    <rabbit:admin connection-factory="rabbitConnectionFactory"/>


    <!-- ========== Queue & Exchange ==============================================================  -->

    <!-- queue 队列声明-->
    <rabbit:queue id="queue_one" durable="true" auto-delete="false" exclusive="false" name="queue_one"/>
    <rabbit:queue id="queue_two" durable="true" auto-delete="false" exclusive="false" name="queue_two"/>

    <!--direct: exchange queue binging key 绑定 -->
    <rabbit:direct-exchange name="my-mq-exchange" durable="true" auto-delete="false" id="my-mq-exchange">
        <rabbit:bindings>
            <!--<rabbit:binding queue="queue_one" key="queue_one_key"/>-->
            <rabbit:binding queue="queue_one" key=""/> <!-- default key -->
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!--topic: exchange queue binging key 绑定 -->
    <!--<rabbit:topic-exchange name="myexchange1"  durable="true" auto-delete="false" id="myexchange1">-->
        <!--<rabbit:bindings>-->
            <!--<rabbit:binding queue="queue_one" pattern="foo.*"></rabbit:binding>-->
        <!--</rabbit:bindings>-->
    <!--</rabbit:topic-exchange>-->

    <!--fanout: exchange queue binging key 绑定 -->
    <!--<rabbit:fanout-exchange name="myexchange2" durable="true" auto-delete="false" id="myexchange2">-->
        <!--<rabbit:bindings>-->
            <!--<rabbit:binding queue="queue_two"></rabbit:binding>-->
        <!--</rabbit:bindings>-->
    <!--</rabbit:fanout-exchange>-->


    <!-- ========== spring template声明 ============================================================== -->

    <!-- spring amqp默认的是jackson 的一个插件,目的将生产者生产的数据转换为json存入消息队列-->
    <bean id="jsonMessageConverter"  class="net.sh.rabbitmq.demo.FastJsonMessageConverter"></bean>

    <!--direct-->
    <rabbit:template exchange="my-mq-exchange" id="amqpTemplate" connection-factory="rabbitConnectionFactory" message-converter="jsonMessageConverter"
                     mandatory-expression="true"/>

    <!--topic-->
    <!--<rabbit:template exchange="myexchange1" id="amqpTemplate1" connection-factory="rabbitConnectionFactory" message-converter="jsonMessageConverter"-->
                     <!--routing-key="foo.bar"/>-->

    <!--fanout-->
    <!--<rabbit:template exchange="myexchange2" id="amqpTemplate2" connection-factory="rabbitConnectionFactory" message-converter="jsonMessageConverter"-->
                     <!--channel-transacted="true"/>-->

    <!-- ========== error template声明 ============================================================== -->

    <rabbit:queue id="errorQueue" name="errorQueue" auto-delete="false" durable="true">
        <rabbit:queue-arguments>
            <entry key="x-ha-policy" value="all"/>
            <entry key="ha-params" value="1"/>
            <entry key="ha-sync-mode" value="automatic"/>
        </rabbit:queue-arguments>
    </rabbit:queue>

    <rabbit:direct-exchange id="errorExchange" name="errorExchange" auto-delete="false" durable="true">
        <rabbit:bindings>
            <rabbit:binding queue="errorQueue" key="errorRoutingKey"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <bean id="retryTemplate" class="org.springframework.retry.support.RetryTemplate">
        <property name="backOffPolicy">
            <bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
                <property name="initialInterval" value="200"/>
                <property name="maxInterval" value="30000"/>
            </bean>
        </property>
        <property name="retryPolicy">
            <bean class="org.springframework.retry.policy.SimpleRetryPolicy">
                <property name="maxAttempts" value="5"/>
            </bean>
        </property>
    </bean>

    <rabbit:template id="errorTemplate" connection-factory="rabbitConnectionFactory" exchange="errorExchange" queue="errorQueue" routing-key="errorRoutingKey"
                     retry-template="retryTemplate"/>


    <bean id="produceConfirmProcessor" class="net.sh.rabbitmq.demo.confirm_entry.ProduceConfirmProcessor">
        <property name="amqpTemplate" ref="amqpTemplate" />
        <property name="errorTemplate" ref="errorTemplate" />
        <property name="guidWorker" ref="guidWorker" />
    </bean>

</beans>


